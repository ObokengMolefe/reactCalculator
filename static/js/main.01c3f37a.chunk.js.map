{"version":3,"sources":["components/layout.js","assets/img/technocrop.png","components/outputRow.js","components/output.js","App.js","reportWebVitals.js","index.js"],"names":["Layout","props","useState","input","setInput","result","setResult","handleClick","event","value","target","res","eval","err","undefined","str","substr","length","className","user","answer","src","technocrop","width","style","display","marginLeft","marginRight","type","onClick","OutputRow","readOnly","textSize","Output","fontSize","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01c3f37a.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './layout.css';\r\nimport technocrop from '../assets/img/technocrop.png'\r\nimport Output from \"./output\";\r\n\r\n const Layout = (props)=>{\r\n     let [input, setInput] = useState('0')\r\n     let [result, setResult] = useState('')\r\n     const handleClick = (event) =>{\r\n         const value = event.target.value;\r\n         if(value == '='){\r\n             if(input !== ''){\r\n                 let res = ''\r\n                 try{\r\n                     res = eval(input)\r\n                 }catch(err){\r\n                     setResult('Math error')\r\n                 }\r\n                 if(res === undefined)\r\n                 {\r\n                     setResult('Math error')\r\n                 }else{\r\n                     setResult(input + '=')\r\n                     setInput(res)\r\n                 }\r\n             }\r\n         }\r\n         else if(value === 'C'){\r\n             setInput('0')\r\n             setResult('')\r\n         }\r\n         else if(value === 'DEL'){\r\n             let str = input\r\n             str = str.substr(0, str.length-1)\r\n             setInput(str)\r\n         }\r\n         else if(input == '0'){\r\n             setInput(value)\r\n         }else{\r\n             setInput(input += value)\r\n         }     \r\n     } \r\n     return(\r\n         <div className = 'frame'>\r\n             <div className = \"calculator\">\r\n            <br></br>\r\n            <Output user = {input} answer = {result}/>\r\n            <img src={technocrop} width='250 px' style={{display:'block',marginLeft: 'auto',marginRight:'auto'}}/>\r\n            <div className = 'keys'>\r\n                <input type = 'button' value = {'C'} className = 'button clear' onClick = {handleClick}></input>\r\n                <input type = 'button' value = {'DEL'} className = 'button clear' onClick = {handleClick}></input>\r\n                <input type = 'button' value = {'%'} className = 'button operator' onClick = {handleClick}></input>\r\n                <input type = 'button' value = {'/'} className = 'button operator' onClick = {handleClick}></input>\r\n\r\n                <input type = 'button' value = {'7'} className = 'button ' onClick = {handleClick}></input>\r\n                <input type = 'button' value = {'8'} className = 'button ' onClick = {handleClick}></input>\r\n                <input type = 'button' value = {'9'} className = 'button ' onClick = {handleClick}></input>\r\n                <input type = 'button' value = {'*'} className = 'button operator' onClick = {handleClick}></input>\r\n\r\n                <input type = 'button' value = {'4'} className = 'button ' onClick = {handleClick}></input>\r\n                <input type = 'button' value = {'5'} className = 'button ' onClick = {handleClick}></input>\r\n                <input type = 'button' value = {'6'} className = 'button ' onClick = {handleClick}></input>\r\n                <input type = 'button' value = {'-'} className = 'button operator' onClick = {handleClick}></input>\r\n\r\n                <input type = 'button' value = {'1'} className = 'button ' onClick = {handleClick}></input>\r\n                <input type = 'button' value = {'2'} className = 'button ' onClick = {handleClick}></input>\r\n                <input type = 'button' value = {'3'} className = 'button ' onClick = {handleClick}></input>\r\n                <input type = 'button' value = {'+'} className = 'button operator' onClick = {handleClick}></input>\r\n\r\n                <input type = 'button' value = {'0'} className = 'button ' onClick = {handleClick}></input>\r\n                <input type = 'button' value = {'.'} className = 'button ' onClick = {handleClick}></input>\r\n                <input type = 'button' value = {'='} className = 'button equal-sign' onClick = {handleClick}></input>\r\n            </div>\r\n             </div>\r\n         </div>\r\n     )\r\n };\r\n\r\n export default Layout;","export default __webpack_public_path__ + \"static/media/technocrop.2d153e6d.png\";","import React from 'react';\r\nimport Output from './output';\r\nimport './outputRow.css'\r\n\r\nconst OutputRow = props =>{\r\n    return(\r\n        <div>\r\n            <input type = 'text' readOnly className = 'screen' style={props.textSize} value={props.value}></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OutputRow","import React from 'react';\r\nimport OutputRow from './outputRow';\r\n\r\nconst Output = props =>{\r\n    return(\r\n        <div>\r\n            <OutputRow value = {props.answer} textSize={{fontSize: '20px'}}/>\r\n            <OutputRow value = {props.user}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Output","import './App.css';\nimport Layout from \"./components/layout\";\n\nfunction App() {\n  return (\n    <div className = 'App'>\n      <Layout>\n\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}